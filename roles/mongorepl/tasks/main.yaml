---
- name: Add Mongo Repository Key
  apt_key: keyserver={{ keyserver }} id={{ keyid }}
  register: repokeydone

- name: Add Mongo Repository
  apt_repository: repo={{ repo }} state=present
  when: repokeydone|success
  register: ppadone

- name: Install Mongo
  apt: pkg=mongodb-org state=installed update_cache=true
  when: ppadone|success
  register: mongoinstalled

- name: Create Data Directory
  file: path={{ dbpath }} state=directory owner={{ mongouser }} group={{ mongogroup }}
  when: arbiter == "false"

- name: Create Arbiter Directory
  file: path={{ arbiterdbpath }} state=directory owner={{ mongouser }} group={{ mongogroup }}
  when: arbiter == "true"

- name: Create Hosts File
  template: src=hosts dest=/etc/hosts
  when: mongoinstalled|success

- name: Create Hostname File
  template: src=hostname dest=/etc/hostname
  when: mongoinstalled|success

- name: Update Hostname
  hostname: name={{ hostname }}

- name: Create Mongo Conf
  template: src=mongod.conf dest=/etc/mongod.conf
  register: mongoconf
  when: mongoinstalled|success and arbiter == "false"
  notify:
      - Restart Mongod

- name: Create Mongo Arbiter Conf
  template: src=mongod-arbiter.conf dest=/etc/mongod.conf
  register: mongoconf
  when: mongoinstalled|success and arbiter == "true"
  notify:
      - Restart Mongod

- name: Prepare ReplicaSet Config (Primary)
  template: src=replicaset-config.js dest={{ configscript }}
  delegate_to: localhost
  when: mongoconf|success and primary == "true"
  register: primarydone
  notify:
    - Upload ReplicaSet Config Script (Primary)

- name: Prepare ReplicaSet Config (Secondary)
  lineinfile: dest={{ configscript }} line="{{ addsecondary }}\n{{ sleep }}"
  delegate_to: localhost
  when: primarydone|success and primary == "false" and backup == "false" and arbiter == "false"
  notify:
    - Cleanup (Local)

- name: Prepare ReplicaSet Config (Arbiter)
  lineinfile: dest={{ configscript }} line="{{ addarbiter }}\n{{ sleep }}"
  delegate_to: localhost
  when: primarydone|success and primary == "false" and backup == "false" and arbiter == "true"

- name: Prepare ReplicaSet Config (Backup)
  lineinfile: dest={{ configscript }} line="{{ addbackup }}\n{{ sleep }}"
  delegate_to: localhost
  when: primarydone|success and primary == "false" and backup == "true" and arbiter == "false"
